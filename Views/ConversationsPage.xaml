<Page
    x:Class="Tindows.Views.ConversationsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Tindows.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:Tindows.ViewModels" mc:Ignorable="d"
      xmlns:gif="using:XamlAnimatedGif">


    <Page.DataContext>
        <vm:ConversationsPageViewModel />
    </Page.DataContext>

    <Page.Resources>
        <DataTemplate x:Name="FromTemplate">
            <Grid>
                <Grid x:Name="FromBubble" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid Margin="0" Background="{StaticResource SystemControlBackgroundAccentBrush}" Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Foreground="White" Text="{Binding message}" x:Name="MainText" TextWrapping="Wrap" Grid.Row="0" FontSize="14.667" Padding="10,5,10,5">

                        </TextBlock>

                        <Image Grid.Row="1" gif:AnimationBehavior.SourceUri="{Binding MessageImageURL}"
                               gif:AnimationBehavior.RepeatBehavior="3x"/>

                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Opacity="0.8" Foreground="White" Text="{Binding sent_date}" x:Name="timeText" Margin="0" TextWrapping="Wrap" Grid.Row="0" Padding="10" Grid.Column="0" FontSize="9.333"/>
                            <TextBlock Opacity="0.8" Foreground="White" Text="{Binding type}" FontSize="13.333" x:Name="status" Margin="0" TextWrapping="Wrap" Grid.Row="0" Padding="10" Grid.Column="1" HorizontalAlignment="Right"/>
                        </Grid>

                    </Grid>
                    <Path Grid.Row="1"  Data="M404,136 L404,149.5 L387.5,134.5 z" Fill="{StaticResource SystemControlBackgroundAccentBrush}" HorizontalAlignment="Right" Height="20" Stretch="Fill" UseLayoutRounding="False" Width="20" Margin="0,-5,10,0"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Name="ToTemplate">
            <Grid x:Name="ToBubble" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Path Grid.Row="0" Data="M404,136 L404,149.5 L387.5,134.5 z" Fill="{StaticResource SystemControlBackgroundAccentBrush}" HorizontalAlignment="Left" Height="20" Stretch="Fill" UseLayoutRounding="False" Width="20" Margin="10,2,10,0" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <CompositeTransform Rotation="-179.206"/>
                    </Path.RenderTransform>
                </Path>
                <Grid Margin="0" Background="{StaticResource SystemControlBackgroundAccentBrush}" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Foreground="White" Text="{Binding message}" x:Name="MainText2" TextWrapping="Wrap" Grid.Row="0" FontSize="14.667" Padding="10,5,10,5">
                    </TextBlock>

                    <Image MaxHeight="500" Grid.Row="1" gif:AnimationBehavior.SourceUri="{Binding MessageImageURL}"    
                           gif:AnimationBehavior.RepeatBehavior="3x"
                           />

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Opacity="0.8" Foreground="White" Text="{Binding sent_date}" x:Name="timeText2" Margin="0" TextWrapping="Wrap" Grid.Row="0" Padding="10" Grid.Column="0" FontSize="9.333"/>
                        <TextBlock Opacity="0.8" Foreground="White" Text="{Binding type}" FontSize="13.333" x:Name="status" Margin="0" TextWrapping="Wrap" Grid.Row="0" Padding="10" Grid.Column="1" HorizontalAlignment="Right"/>
                    </Grid>

                </Grid>
            </Grid>
        </DataTemplate>
        <vm:ChatBubbleSelector x:Key="ChatBubbleTemplateSelector" toBubble="{StaticResource ToTemplate}" fromBubble="{StaticResource FromTemplate}"></vm:ChatBubbleSelector>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NarrowVisualStateGroup">
                <VisualState x:Name="DetailVisualState">
                    <VisualState.Setters>
                        <Setter Target="BackButton.IsEnabled" Value="True" />
                        <Setter Target="MailDetail.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ListVisualState">
                    <VisualState.Setters>
                        <Setter Target="BackButton.IsEnabled" Value="False" />
                        <Setter Target="MailDetail.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BackButton.Visibility" Value="Visible" />
                        <Setter Target="MailDetail.Visibility" Value="Collapsed" />
                        <Setter Target="MailDetail.(Grid.Column)" Value="0" />
                        <Setter Target="MailList.IsItemClickEnabled" Value="True" />
                        <Setter Target="LeftColumn.Width" Value="*" />
                        <Setter Target="RightColumn.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MailDetail.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MailDetail.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="LeftColumn" Width="320" />
            <ColumnDefinition x:Name="RightColumn" />
        </Grid.ColumnDefinitions>

        <CommandBar Grid.ColumnSpan="2" Background="LightGray">
            <CommandBar.Content>
                <AppBarButton x:Name="BackButton" Icon="Back"
                              IsEnabled="True" Visibility="Collapsed">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Click">
                            <Core:GoToStateAction StateName="ListVisualState" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </AppBarButton>
            </CommandBar.Content>
        </CommandBar>

        <vm:PersistSelectedItemListView x:Name="MailList" Grid.Row="1"
                  Grid.Column="0" IsItemClickEnabled="False"
                  ItemsSource="{x:Bind ViewModel.Conversations, Mode=OneWay}"
                  SelectedItem="{x:Bind ViewModel.Selected, Mode=TwoWay, Converter={StaticResource NoopConverter}}">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="ItemClick">
                    <Core:GoToStateAction StateName="DetailVisualState" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <RelativePanel>
                        <TextBlock x:Name="NamePar" Text="{Binding person.name}" FontFamily="Roboto" FontSize="15" />
                        <TextBlock Foreground="Red" RelativePanel.AlignRightWithPanel="True">
                            <Run Text="{Binding messages.Count}" />
                            <Run Text=" ✉" />
                        </TextBlock>
                    </RelativePanel>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </vm:PersistSelectedItemListView>

        <Pivot x:Name="MailDetail" Grid.Row="1" Grid.Column="1">
            <PivotItem Header="{x:Bind ViewModel.Selected.person.name, Mode=OneWay, FallbackValue='No Contact Selected'}">
                <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <vm:AutoScrollListBox Background="Transparent" Grid.Row="0" ScrollViewer.VerticalScrollBarVisibility="Auto" x:Name="TindowsChat"
                     ItemTemplateSelector="{StaticResource ChatBubbleTemplateSelector}"
                     ItemsSource="{x:Bind ViewModel.Selected.messages, Mode=OneWay}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="IsHitTestVisible" Value="False"></Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </vm:AutoScrollListBox>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <TextBox 
                         PreventKeyboardDisplayOnProgrammaticFocus="True"
                         Grid.Row="0" 
                         Grid.Column="0" 
                         PlaceholderText="Enter your message ;), they're waiting!"
                         Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:TextBoxEnterKeyBehavior>
                                    <Core:CallMethodAction MethodName="sendMessage" TargetObject="{x:Bind ViewModel}" />
                                </Behaviors:TextBoxEnterKeyBehavior>
                                <Core:EventTriggerBehavior>
                                    <Behaviors:FocusAction/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </TextBox>
                        <Button Grid.Row="0" Grid.Column="1" x:Name="sendButton" Content="➢ Send " HorizontalAlignment="Stretch" FontFamily="Segoe UI Symbol" FontSize="21.333"
                        Click="{x:Bind ViewModel.sendMessage}"/>
                    </Grid>
                    <!--<ContentControl xmlns:m="using:Sample.Models" Content="{Binding Selected}" 
                            ContentTemplate="{StaticResource MessageDetailTemplate}" />-->
                </Grid>
            </PivotItem>
            <PivotItem Header="Bio and Pics" Padding="0"
                       ContentTemplate="{StaticResource MatchDetails}"
                       Content="{x:Bind ViewModel.SelectedAdvanced, Mode=OneWay}">
            </PivotItem>
        </Pivot>

    </Grid>

</Page>
